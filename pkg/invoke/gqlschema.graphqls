type Invocation {
  id: ID!
  status: Int!
  method: String!
  url: String!
  requestHeaders: [Header]
  responseHeaders: [Header]
  requestBody: String!
  responseBody: String!
}

type Header {
  name: String!
  value: String!
}

type Query {
  invocations: [Invocation!]!
  invocation(id: ID!): Invocation
}

input HeaderInput {
  name: String!
  value: String!
}
input ServerInvocationInput {
  method: String!
  url: String!
  requestHeaders: [HeaderInput]
  requestBody: String!
}
input BrowserInvocationInput {
  status: Int!
  method: String!
  url: String!
  requestHeaders: [HeaderInput]
  responseHeaders: [HeaderInput]
  requestBody: String!
  responseBody: String!
}

type Mutattion {
  MakeServerInvocation(invocation: ServerInvocationInput!): Boolean
  MakeBrowserInvocation(invocation: BrowserInvocationInput!): Boolean
}

type Subscription {
  invocations: [Invocation!]!
}
